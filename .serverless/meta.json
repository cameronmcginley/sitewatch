{
  "C:\\Users\\mcgin\\Desktop\\FalloutBuy": {
    "versionSfCore": null,
    "versionFramework": "4.1.7",
    "isWithinCompose": false,
    "isCompose": false,
    "composeOrgName": null,
    "composeResolverProviders": {},
    "composeServiceName": null,
    "servicePath": "C:\\Users\\mcgin\\Desktop\\FalloutBuy",
    "serviceConfigFileName": "serverless.yml",
    "service": {
      "service": "webcheck",
      "provider": {
        "name": "aws",
        "runtime": "nodejs20.x",
        "region": "us-east-2",
        "iam": {
          "role": {
            "statements": [
              {
                "Effect": "Allow",
                "Action": [
                  "dynamodb:Query",
                  "dynamodb:Scan",
                  "dynamodb:GetItem",
                  "dynamodb:PutItem",
                  "dynamodb:UpdateItem",
                  "dynamodb:DeleteItem"
                ],
                "Resource": [
                  "arn:aws:dynamodb:us-east-2:992382695229:table/webchecks",
                  "arn:aws:dynamodb:us-east-2:992382695229:table/webchecks/index/userid-sk-index"
                ]
              }
            ]
          }
        },
        "stage": "dev",
        "versionFunctions": true,
        "compiledCloudFormationTemplate": {
          "AWSTemplateFormatVersion": "2010-09-09",
          "Description": "The AWS CloudFormation template for this Serverless application",
          "Resources": {
            "ServerlessDeploymentBucket": {
              "Type": "AWS::S3::Bucket",
              "Properties": {
                "BucketEncryption": {
                  "ServerSideEncryptionConfiguration": [
                    {
                      "ServerSideEncryptionByDefault": {
                        "SSEAlgorithm": "AES256"
                      }
                    }
                  ]
                }
              }
            },
            "ServerlessDeploymentBucketPolicy": {
              "Type": "AWS::S3::BucketPolicy",
              "Properties": {
                "Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "PolicyDocument": {
                  "Statement": [
                    {
                      "Action": "s3:*",
                      "Effect": "Deny",
                      "Principal": "*",
                      "Resource": [
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":s3:::",
                              {
                                "Ref": "ServerlessDeploymentBucket"
                              },
                              "/*"
                            ]
                          ]
                        },
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":s3:::",
                              {
                                "Ref": "ServerlessDeploymentBucket"
                              }
                            ]
                          ]
                        }
                      ],
                      "Condition": {
                        "Bool": {
                          "aws:SecureTransport": false
                        }
                      }
                    }
                  ]
                }
              }
            },
            "CreateCheckLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/webcheck-dev-createCheck"
              }
            },
            "GetCheckLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/webcheck-dev-getCheck"
              }
            },
            "UpdateCheckLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/webcheck-dev-updateCheck"
              }
            },
            "DeleteCheckLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/webcheck-dev-deleteCheck"
              }
            },
            "IamRoleLambdaExecution": {
              "Type": "AWS::IAM::Role",
              "Properties": {
                "AssumeRolePolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Principal": {
                        "Service": [
                          "lambda.amazonaws.com"
                        ]
                      },
                      "Action": [
                        "sts:AssumeRole"
                      ]
                    }
                  ]
                },
                "Policies": [
                  {
                    "PolicyName": {
                      "Fn::Join": [
                        "-",
                        [
                          "webcheck",
                          "dev",
                          "lambda"
                        ]
                      ]
                    },
                    "PolicyDocument": {
                      "Version": "2012-10-17",
                      "Statement": [
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:CreateLogStream",
                            "logs:CreateLogGroup",
                            "logs:TagResource"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/webcheck-dev*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:PutLogEvents"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/webcheck-dev*:*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "dynamodb:Query",
                            "dynamodb:Scan",
                            "dynamodb:GetItem",
                            "dynamodb:PutItem",
                            "dynamodb:UpdateItem",
                            "dynamodb:DeleteItem"
                          ],
                          "Resource": [
                            "arn:aws:dynamodb:us-east-2:992382695229:table/webchecks",
                            "arn:aws:dynamodb:us-east-2:992382695229:table/webchecks/index/userid-sk-index"
                          ]
                        }
                      ]
                    }
                  }
                ],
                "Path": "/",
                "RoleName": {
                  "Fn::Join": [
                    "-",
                    [
                      "webcheck",
                      "dev",
                      {
                        "Ref": "AWS::Region"
                      },
                      "lambdaRole"
                    ]
                  ]
                }
              }
            },
            "CreateCheckLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": {
                    "Ref": "ServerlessDeploymentBucket"
                  },
                  "S3Key": "serverless/webcheck/dev/1719715887259-2024-06-30T02:51:27.259Z/webcheck.zip"
                },
                "Handler": "api/functions/createCheck.handler",
                "Runtime": "nodejs20.x",
                "FunctionName": "webcheck-dev-createCheck",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "NODE_OPTIONS": "--enable-source-maps"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "CreateCheckLogGroup"
              ]
            },
            "GetCheckLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": {
                    "Ref": "ServerlessDeploymentBucket"
                  },
                  "S3Key": "serverless/webcheck/dev/1719715887259-2024-06-30T02:51:27.259Z/webcheck.zip"
                },
                "Handler": "api/functions/getCheck.handler",
                "Runtime": "nodejs20.x",
                "FunctionName": "webcheck-dev-getCheck",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "NODE_OPTIONS": "--enable-source-maps"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "GetCheckLogGroup"
              ]
            },
            "UpdateCheckLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": {
                    "Ref": "ServerlessDeploymentBucket"
                  },
                  "S3Key": "serverless/webcheck/dev/1719715887259-2024-06-30T02:51:27.259Z/webcheck.zip"
                },
                "Handler": "api/functions/updateCheck.handler",
                "Runtime": "nodejs20.x",
                "FunctionName": "webcheck-dev-updateCheck",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "NODE_OPTIONS": "--enable-source-maps"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "UpdateCheckLogGroup"
              ]
            },
            "DeleteCheckLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": {
                    "Ref": "ServerlessDeploymentBucket"
                  },
                  "S3Key": "serverless/webcheck/dev/1719715887259-2024-06-30T02:51:27.259Z/webcheck.zip"
                },
                "Handler": "api/functions/deleteCheck.handler",
                "Runtime": "nodejs20.x",
                "FunctionName": "webcheck-dev-deleteCheck",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "NODE_OPTIONS": "--enable-source-maps"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "DeleteCheckLogGroup"
              ]
            },
            "CreateCheckLambdaVersionO0RbmzUuurSgumj9sxjIqhXmWXbxeosKrcdjhsOV33A": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "CreateCheckLambdaFunction"
                },
                "CodeSha256": "Le4y3FvTt7SzwbK4lz7AV4R+c9tYOYO2nKu00wFz0Js="
              }
            },
            "GetCheckLambdaVersion74gs4ScD0Mn4CYOkQLfna4Zm7o5B2cha4j2bZ0": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "GetCheckLambdaFunction"
                },
                "CodeSha256": "Le4y3FvTt7SzwbK4lz7AV4R+c9tYOYO2nKu00wFz0Js="
              }
            },
            "UpdateCheckLambdaVersioncYmMoWv3Ql7PMAVlLE9aWgjvkQREM79IiP4PxB3J78": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "UpdateCheckLambdaFunction"
                },
                "CodeSha256": "Le4y3FvTt7SzwbK4lz7AV4R+c9tYOYO2nKu00wFz0Js="
              }
            },
            "DeleteCheckLambdaVersionzduIfCVf4AZZ5IgVxommlnvj1zJtbbyFsPOZMHUSGs": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "DeleteCheckLambdaFunction"
                },
                "CodeSha256": "Le4y3FvTt7SzwbK4lz7AV4R+c9tYOYO2nKu00wFz0Js="
              }
            },
            "ApiGatewayRestApi": {
              "Type": "AWS::ApiGateway::RestApi",
              "Properties": {
                "Name": "dev-webcheck",
                "EndpointConfiguration": {
                  "Types": [
                    "EDGE"
                  ]
                },
                "Policy": ""
              }
            },
            "ApiGatewayResourceItems": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Fn::GetAtt": [
                    "ApiGatewayRestApi",
                    "RootResourceId"
                  ]
                },
                "PathPart": "items",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodItemsPost": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "POST",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceItems"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "CreateCheckLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "CreateCheckLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodItemsGet": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "GET",
                "RequestParameters": {
                  "method.request.querystring.userid": false
                },
                "ResourceId": {
                  "Ref": "ApiGatewayResourceItems"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "GetCheckLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "GetCheckLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodItemsPut": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "PUT",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceItems"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "UpdateCheckLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "UpdateCheckLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodItemsDelete": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "DELETE",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceItems"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "DeleteCheckLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "DeleteCheckLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayDeployment1719715886418": {
              "Type": "AWS::ApiGateway::Deployment",
              "Properties": {
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "StageName": "dev"
              },
              "DependsOn": [
                "ApiGatewayMethodItemsPost",
                "ApiGatewayMethodItemsGet",
                "ApiGatewayMethodItemsPut",
                "ApiGatewayMethodItemsDelete"
              ]
            },
            "CreateCheckLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "CreateCheckLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "GetCheckLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "GetCheckLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "UpdateCheckLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "UpdateCheckLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "DeleteCheckLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "DeleteCheckLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            }
          },
          "Outputs": {
            "ServerlessDeploymentBucketName": {
              "Value": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "Export": {
                "Name": "sls-webcheck-dev-ServerlessDeploymentBucketName"
              }
            },
            "CreateCheckLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "CreateCheckLambdaVersionO0RbmzUuurSgumj9sxjIqhXmWXbxeosKrcdjhsOV33A"
              },
              "Export": {
                "Name": "sls-webcheck-dev-CreateCheckLambdaFunctionQualifiedArn"
              }
            },
            "GetCheckLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "GetCheckLambdaVersion74gs4ScD0Mn4CYOkQLfna4Zm7o5B2cha4j2bZ0"
              },
              "Export": {
                "Name": "sls-webcheck-dev-GetCheckLambdaFunctionQualifiedArn"
              }
            },
            "UpdateCheckLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "UpdateCheckLambdaVersioncYmMoWv3Ql7PMAVlLE9aWgjvkQREM79IiP4PxB3J78"
              },
              "Export": {
                "Name": "sls-webcheck-dev-UpdateCheckLambdaFunctionQualifiedArn"
              }
            },
            "DeleteCheckLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "DeleteCheckLambdaVersionzduIfCVf4AZZ5IgVxommlnvj1zJtbbyFsPOZMHUSGs"
              },
              "Export": {
                "Name": "sls-webcheck-dev-DeleteCheckLambdaFunctionQualifiedArn"
              }
            },
            "ServiceEndpoint": {
              "Description": "URL of the service endpoint",
              "Value": {
                "Fn::Join": [
                  "",
                  [
                    "https://",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    ".execute-api.",
                    {
                      "Ref": "AWS::Region"
                    },
                    ".",
                    {
                      "Ref": "AWS::URLSuffix"
                    },
                    "/dev"
                  ]
                ]
              },
              "Export": {
                "Name": "sls-webcheck-dev-ServiceEndpoint"
              }
            }
          }
        },
        "coreCloudFormationTemplate": {
          "AWSTemplateFormatVersion": "2010-09-09",
          "Description": "The AWS CloudFormation template for this Serverless application",
          "Resources": {
            "ServerlessDeploymentBucket": {
              "Type": "AWS::S3::Bucket",
              "Properties": {
                "BucketEncryption": {
                  "ServerSideEncryptionConfiguration": [
                    {
                      "ServerSideEncryptionByDefault": {
                        "SSEAlgorithm": "AES256"
                      }
                    }
                  ]
                }
              }
            },
            "ServerlessDeploymentBucketPolicy": {
              "Type": "AWS::S3::BucketPolicy",
              "Properties": {
                "Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "PolicyDocument": {
                  "Statement": [
                    {
                      "Action": "s3:*",
                      "Effect": "Deny",
                      "Principal": "*",
                      "Resource": [
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":s3:::",
                              {
                                "Ref": "ServerlessDeploymentBucket"
                              },
                              "/*"
                            ]
                          ]
                        },
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":s3:::",
                              {
                                "Ref": "ServerlessDeploymentBucket"
                              }
                            ]
                          ]
                        }
                      ],
                      "Condition": {
                        "Bool": {
                          "aws:SecureTransport": false
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "Outputs": {
            "ServerlessDeploymentBucketName": {
              "Value": {
                "Ref": "ServerlessDeploymentBucket"
              }
            }
          }
        },
        "vpc": {}
      },
      "functions": {
        "createCheck": {
          "handler": "api/functions/createCheck.handler",
          "events": [
            {
              "http": {
                "path": "items",
                "method": "post",
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "webcheck-dev-createCheck",
          "environment": {
            "NODE_OPTIONS": "--enable-source-maps"
          },
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "CreateCheckLambdaVersionO0RbmzUuurSgumj9sxjIqhXmWXbxeosKrcdjhsOV33A"
        },
        "getCheck": {
          "handler": "api/functions/getCheck.handler",
          "events": [
            {
              "http": {
                "path": "items",
                "method": "get",
                "request": {
                  "parameters": {
                    "method.request.querystring.userid": false
                  }
                },
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "webcheck-dev-getCheck",
          "environment": {
            "NODE_OPTIONS": "--enable-source-maps"
          },
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "GetCheckLambdaVersion74gs4ScD0Mn4CYOkQLfna4Zm7o5B2cha4j2bZ0"
        },
        "updateCheck": {
          "handler": "api/functions/updateCheck.handler",
          "events": [
            {
              "http": {
                "path": "items",
                "method": "put",
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "webcheck-dev-updateCheck",
          "environment": {
            "NODE_OPTIONS": "--enable-source-maps"
          },
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "UpdateCheckLambdaVersioncYmMoWv3Ql7PMAVlLE9aWgjvkQREM79IiP4PxB3J78"
        },
        "deleteCheck": {
          "handler": "api/functions/deleteCheck.handler",
          "events": [
            {
              "http": {
                "path": "items",
                "method": "delete",
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "webcheck-dev-deleteCheck",
          "environment": {
            "NODE_OPTIONS": "--enable-source-maps"
          },
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "DeleteCheckLambdaVersionzduIfCVf4AZZ5IgVxommlnvj1zJtbbyFsPOZMHUSGs"
        }
      }
    },
    "serviceRawFile": "service: webcheck\r\n\r\nprovider:\r\n  name: aws\r\n  runtime: nodejs20.x\r\n  region: us-east-2\r\n  iam:\r\n    role:\r\n      statements:\r\n        - Effect: Allow\r\n          Action:\r\n            - dynamodb:Query\r\n            - dynamodb:Scan\r\n            - dynamodb:GetItem\r\n            - dynamodb:PutItem\r\n            - dynamodb:UpdateItem\r\n            - dynamodb:DeleteItem\r\n          Resource:\r\n            - arn:aws:dynamodb:us-east-2:992382695229:table/webchecks\r\n            - arn:aws:dynamodb:us-east-2:992382695229:table/webchecks/index/userid-sk-index\r\n\r\nfunctions:\r\n  createCheck:\r\n    handler: api/functions/createCheck.handler\r\n    events:\r\n      - http:\r\n          path: items\r\n          method: post\r\n\r\n  getCheck:\r\n    handler: api/functions/getCheck.handler\r\n    events:\r\n      - http:\r\n          path: items\r\n          method: get\r\n          request:\r\n            parameters:\r\n              querystrings:\r\n                userid: false\r\n\r\n  updateCheck:\r\n    handler: api/functions/updateCheck.handler\r\n    events:\r\n      - http:\r\n          path: items\r\n          method: put\r\n\r\n  deleteCheck:\r\n    handler: api/functions/deleteCheck.handler\r\n    events:\r\n      - http:\r\n          path: items\r\n          method: delete\r\n",
    "command": [
      "deploy"
    ],
    "options": {},
    "error": null,
    "params": {},
    "machineId": "db5c20df7a0a4d6da4c172660e1a409a",
    "accessKeyV2": "<REDACTED>",
    "accessKeyV1": "<REDACTED>",
    "orgId": "f9ac2e50-6ce7-48fa-9ef7-1ab9d5b297ba",
    "orgName": "webcheck",
    "userId": "jXx3K9BDTx8mnbbt01",
    "dashboard": {
      "isEnabledForService": false,
      "requiredAuthentication": false,
      "orgFeaturesInUse": null,
      "orgObservabilityIntegrations": null,
      "serviceAppId": null,
      "serviceProvider": null,
      "instanceParameters": null
    },
    "userName": "webcheck",
    "subscription": null,
    "userEmail": "mcginleycameron@gmail.com",
    "serviceProviderAwsCredentials": "<REDACTED>",
    "serviceProviderAwsAccountId": "992382695229",
    "versionSf": "4.1.7",
    "serviceProviderAwsCfStackName": "webcheck-dev",
    "serviceProviderAwsCfStackId": "arn:aws:cloudformation:us-east-2:992382695229:stack/webcheck-dev/c619b380-3688-11ef-8d17-02d9deb745ef",
    "serviceProviderAwsCfStackCreated": "2024-06-30T02:30:53.938Z",
    "serviceProviderAwsCfStackUpdated": "2024-06-30T02:51:37.579Z",
    "serviceProviderAwsCfStackStatus": "UPDATE_COMPLETE",
    "serviceProviderAwsCfStackOutputs": [
      {
        "OutputKey": "DeleteCheckLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-2:992382695229:function:webcheck-dev-deleteCheck:6",
        "Description": "Current Lambda function version",
        "ExportName": "sls-webcheck-dev-DeleteCheckLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "UpdateCheckLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-2:992382695229:function:webcheck-dev-updateCheck:5",
        "Description": "Current Lambda function version",
        "ExportName": "sls-webcheck-dev-UpdateCheckLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "CreateCheckLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-2:992382695229:function:webcheck-dev-createCheck:6",
        "Description": "Current Lambda function version",
        "ExportName": "sls-webcheck-dev-CreateCheckLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "GetCheckLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-2:992382695229:function:webcheck-dev-getCheck:5",
        "Description": "Current Lambda function version",
        "ExportName": "sls-webcheck-dev-GetCheckLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "ServiceEndpoint",
        "OutputValue": "https://w2xwsg6knd.execute-api.us-east-2.amazonaws.com/dev",
        "Description": "URL of the service endpoint",
        "ExportName": "sls-webcheck-dev-ServiceEndpoint"
      },
      {
        "OutputKey": "ServerlessDeploymentBucketName",
        "OutputValue": "webcheck-dev-serverlessdeploymentbucket-avybbwftltnt",
        "ExportName": "sls-webcheck-dev-ServerlessDeploymentBucketName"
      }
    ]
  }
}